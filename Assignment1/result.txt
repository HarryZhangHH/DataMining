Fill in nan value with per person dataset's mean
mse:
LinearRegression()  0.40906797963439556
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.3997479040613468
LassoCV()  0.3994281061049812
SVR(kernel='linear')  0.7483373161274776
KNeighborsRegressor(n_neighbors=2)  0.7260555353387392RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.4154262889435675
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.4154262889435675
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.45927967247527035
mae(mean_absolute_error): 
LinearRegression()  0.47238591812122915
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.4657469191413456
LassoCV()  0.46495673683356026
SVR(kernel='linear')  0.6385804936224944
KNeighborsRegressor(n_neighbors=2)  0.638319801961841
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.4739820560145269
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.4963277234564505
r2:
LinearRegression()  0.24073055587581393
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.25810458524003593
LassoCV()  0.25820408349967783
SVR(kernel='linear')  0.24016282711416836
KNeighborsRegressor(n_neighbors=2)  -0.3527740955439247
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.22351134770300643
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.14357822996868533



Fill in nan with all dataset's median:
mean_squared_error:
LinearRegression()  0.4097850431594617
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.4010522292615608
LassoCV()  0.4004991293841308
SVR(kernel='linear')  0.7597394880684648
KNeighborsRegressor(n_neighbors=2)  0.7211319703565505
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.4200039107171546
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.4610832795170717
r2:
LinearRegression()  0.23316867384492462
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.2501694770809017
LassoCV()  0.2509927279324561
SVR(kernel='linear')  0.22884262961136767
KNeighborsRegressor(n_neighbors=2)  -0.35634115519988896
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.20928224274472473
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.13895319772613396
mean_absolute_error:
LinearRegression()  0.4728720716724728
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.46669197321366784
LassoCV()  0.4651664127330527
SVR(kernel='linear')  0.6420058091657672
KNeighborsRegressor(n_neighbors=2)  0.6367848258706468
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.47480481798033347
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.5010370263116277


Fill in nan value with per person dataset's median 
neg_mean_squared_error:
LinearRegression()  0.40977899025739944
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.40027218349933563
LassoCV()  0.40001487531859514
SVR(kernel='linear')  0.7502027763436386
KNeighborsRegressor(n_neighbors=2)  0.7256459240257047
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.4172082915132861
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.4657265064078054
neg_mean_absolute_error:
LinearRegression()  0.4729894216088578
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.4662506177745911
LassoCV()  0.4654688558753356
SVR(kernel='linear')  0.6391614771141542
KNeighborsRegressor(n_neighbors=2)  0.6379897388059701
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.4755509706961158
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.5074142142907896
r2:
LinearRegression()  0.23925928989597617
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.25708261894734497
LassoCV()  0.2571389421717218
SVR(kernel='linear')  0.23831962216678454
KNeighborsRegressor(n_neighbors=2)  -0.35243632355264665
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.21981715916562317
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.13053006425970187


Fill in nan value with per person dataset's mean & Feature Supplement 6
neg_mean_squared_error:
LinearRegression()  0.4231177489127399
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.3951136125070092
LassoCV()  0.396939732839785
SVR(kernel='linear')  0.7570171529620333
KNeighborsRegressor(n_neighbors=2)  0.7263000808403977
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.40007695175942204
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.4533301181331225
neg_mean_absolute_error:
LinearRegression()  0.47976774627672436
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.4610896807855679
LassoCV()  0.4620580098782653
SVR(kernel='linear')  0.6426772521281195
KNeighborsRegressor(n_neighbors=2)  0.6385141427578609
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.45723493706428353
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.4985202012873807
r2:
LinearRegression()  0.21294559130676388
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.26627092164123245
LassoCV()  0.2628217472368413
SVR(kernel='linear')  0.2284892179519209
KNeighborsRegressor(n_neighbors=2)  0.35328092170635195
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.250653790866599
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.15052714737618594

Fill in nan value with per person dataset's mean & Feature Supplement 2(average_score, average_score_std)
neg_mean_absolute_error:
LinearRegression()  0.47353800873637797
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.4660628329888304
LassoCV()  0.46596448604702007
SVR(kernel='linear')  0.643597120768317
KNeighborsRegressor(n_neighbors=2)  0.6385141427578609
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.472720972583194
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.5107754944400417
neg_mean_squared_error:
LinearRegression()  0.4097060029568711
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.39912333075751044
LassoCV()  0.39924173825173936
SVR(kernel='linear')  0.7549077562182833
KNeighborsRegressor(n_neighbors=2)  0.7263000808403977
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.41228215234999877
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.47330138985795545


Fill in nan value with per person dataset's mean & Feature Supplement 10
LinearRegression()  0.4340183389067731
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.3930156295037899
LassoCV()  0.39642759787063087
SVR(kernel='linear')  0.770560154131777
KNeighborsRegressor(n_neighbors=2)  0.7233983784150244
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.3993350850173415
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.4444639188699786
neg_mean_absolute_error:
LinearRegression()  0.48634899169820867
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.4610820329787171
LassoCV()  0.46286061372093223
SVR(kernel='linear')  0.650204684908849
KNeighborsRegressor(n_neighbors=2)  0.6372781352951744
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.4597435837087286
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.4956763379172263
r2:
LinearRegression()  0.190860225450264
RidgeCV(alphas=array([  1, 101, 201, 301, 401, 501, 601, 701, 801, 901]))  0.2701643647793716
LassoCV()  0.2639867531593553
SVR(kernel='linear')  0.21417966262865618
KNeighborsRegressor(n_neighbors=2)  -0.3472482219690374
RandomForestRegressor(max_depth=15, n_estimators=50, random_state=0)  0.2542883365420447
XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=0.1, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=12,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=50, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...)  0.17045678759894453
